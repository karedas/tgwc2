import { writeFileSync } from 'fs';
import { dedent } from 'tslint/lib/utils';
import { environment } from './src/environments/environment';

const util = require('util');
const exec = util.promisify(require('child_process').exec);
const env = environment;

async function createVersionsFile(filename: string) {
  const tag = (await exec('git describe --tag')).stdout.toString().trim();
  const revision = (await exec('git rev-parse --short HEAD')).stdout.toString().trim();
  const branch = (await exec('git rev-parse --abbrev-ref HEAD')).stdout.toString().trim();

  console.log(`tag: [${branch === 'master' ? 'PUBLIC' : 'TEST'}] ${tag}', revision: '${revision}', branch: '${branch}'`);
  console.log()
  const content = dedent`
      // this file is automatically generated by git.version.ts script
      export const versions = {
        tag: '[${branch === 'master' ? 'PUBLIC' : 'TEST'}] ${tag}',
        revision: '${revision}',
        branch: '${branch}'
      };`;

  writeFileSync(filename, content, {encoding: 'utf8'});
}

createVersionsFile('src/environments/versions.ts');   